if (POLICY CMP0074)
  cmake_policy(SET CMP0074 NEW)
endif()




include_directories(${CMAKE_CURRENT_SOURCE_DIR}) 
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../3rdparty/jsoncpp/include)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../3rdparty/broadcast_client/include)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../3rdparty/rpc_client/include)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../3rdparty/stream_client/include)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/json_struct)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/media_record)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/ftp_client)

aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR} FILE_SRCS)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/json_struct FILE_SRCS)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/media_record FILE_SRCS)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/ftp_client FILE_SRCS)
 
SET(LIBS ${LIBS} jsoncpp) 
SET(LIBS ${LIBS} broadcast_client)
SET(LIBS ${LIBS} rpc_client)
SET(LIBS ${LIBS} stream_client)

ADD_LIBRARY(${PROJECT_NAME} SHARED ${FILE_SRCS})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${LIBS})
ADD_LIBRARY(${PROJECT_NAME}_static STATIC ${FILE_SRCS})
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES CLEAN_DIRECT_OUTPUT 1)
SET_TARGET_PROPERTIES(${PROJECT_NAME}_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
SET_TARGET_PROPERTIES(${PROJECT_NAME}_static PROPERTIES OUTPUT_NAME "${PROJECT_NAME}")


INSTALL(TARGETS ${PROJECT_NAME} DESTINATION lib)
INSTALL(TARGETS ${PROJECT_NAME}_static DESTINATION lib)
